version: "3.5"
services:
  mysqls_ledger:
    image: mysql:8
    container_name: "mysql_container_forLedger"
    volumes:
      - mysql-data-Ledger:/var/lib/mysql
    ports:
     - "3308:3306" 
    environment:
      - MYSQL_ROOT_PASSWORD=root
    networks:
      - scalar-network-mysql 
    healthcheck:
        test: "/usr/bin/mysql --user=root --password=root --execute \"SHOW DATABASES;\""
        interval: 20s
        timeout: 120s
        retries: 10
  
  mysqls_scalardb:
    image: mysql:8
    container_name: "mysql_container_forScalarDB"
    volumes:
      - mysql-data-scalardb:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
     - "3310:3306" 
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=fault_tool
    networks:
      - scalar-network-mysql 
    healthcheck:
        test: "/usr/bin/mysql --user=root --password=root --execute \"SHOW DATABASES;\""
        interval: 20s
        timeout: 180s
        retries: 10

  mysqls_auditor:
    image: mysql:8
    container_name: "mysql_container_forAuditor"
    volumes:
      - mysql-data-Auditor:/var/lib/mysql
    ports:
     - "3309:3306" 
    environment:
      - MYSQL_ROOT_PASSWORD=root
    networks:
      - scalar-network-mysql 
    healthcheck:
        test: "/usr/bin/mysql --user=root --password=root --execute \"SHOW DATABASES;\""
        interval: 20s
        timeout: 120s
        retries: 10

  scalardl-auditor-schema-loader-mysql:
    image: ghcr.io/scalar-labs/scalardl-schema-loader:3.6.0
    environment:
      - SCHEMA_TYPE=auditor
    volumes:
      - ./scalardb-auditor.properties:/scalardb-auditor.properties
    command:
      - "--config /scalardb-auditor.properties"
    networks:
      - scalar-network-mysql
    depends_on:
      mysqls_auditor:
        condition: service_healthy
    restart: on-failure:5
    
  scalardl-ledger-schema-loader-mysql:
    image: ghcr.io/scalar-labs/scalardl-schema-loader:3.6.0
    volumes:
      - ./scalardb-ledger.properties:/scalardb-ledger.properties
    depends_on:
      mysqls_ledger:
        condition: service_healthy
    command:
      - "--config /scalardb-ledger.properties"
      - "--coordinator"
    networks:
      - scalar-network-mysql
    restart: on-failure:5

  scalar-ledger-as-client:
    image: ghcr.io/scalar-labs/scalar-client:3.6.0
    container_name: "scalardl-samples-scalar-ledger-as-client-3"
    volumes:
      - ./fixture/ledger.pem:/scalar/ledger.pem
      - ./fixture/ledger-key.pem:/scalar/ledger-key.pem
    depends_on:
      - ledger-envoy
      - auditor-envoy
    environment:
      - SCALAR_DL_CLIENT_SERVER_HOST=ledger-envoy
      - SCALAR_DL_CLIENT_AUDITOR_HOST=auditor-envoy
      - SCALAR_DL_CLIENT_AUDITOR_ENABLED=true
      - SCALAR_DL_CLIENT_CERT_HOLDER_ID=ledger
      - SCALAR_DL_CLIENT_CERT_PATH=/scalar/ledger.pem
      - SCALAR_DL_CLIENT_PRIVATE_KEY_PATH=/scalar/ledger-key.pem
    networks:
      - scalar-network-mysql
    command: |
      dockerize -template client.properties.tmpl:client.properties
      -template log4j2.properties.tmpl:log4j2.properties
      ./client/bin/register-cert --config client.properties
    restart: on-failure:5

  scalar-audior-as-client:
    image: ghcr.io/scalar-labs/scalar-client:3.6.0
    container_name: "scalardl-samples-scalar-auditor-as-client-3"
    volumes:
      - ./fixture/auditor.pem:/scalar/auditor.pem
      - ./fixture/auditor-key.pem:/scalar/auditor-key.pem
    depends_on:
      - ledger-envoy
      - auditor-envoy
    environment:
      - SCALAR_DL_CLIENT_SERVER_HOST=ledger-envoy
      - SCALAR_DL_CLIENT_AUDITOR_HOST=auditor-envoy
      - SCALAR_DL_CLIENT_AUDITOR_ENABLED=true
      - SCALAR_DL_CLIENT_CERT_HOLDER_ID=auditor
      - SCALAR_DL_CLIENT_CERT_PATH=/scalar/auditor.pem
      - SCALAR_DL_CLIENT_PRIVATE_KEY_PATH=/scalar/auditor-key.pem
    networks:
      - scalar-network-mysql
    command: |
      dockerize -template client.properties.tmpl:client.properties
      -template log4j2.properties.tmpl:log4j2.properties
      ./client/bin/register-cert --config client.properties
    restart: on-failure:5

  scalar-ledger:
    image: ghcr.io/scalar-labs/scalar-ledger:3.6.0
    container_name: "scalardl-samples-scalar-ledger-3"
    volumes:
      - ./fixture/ledger-key.pem:/scalar/ledger-key.pem
      - ./ledger.properties:/scalar/ledger/ledger.properties
    depends_on:
      mysqls_ledger:
        condition: service_healthy
    environment:
      - SCALAR_DB_CONTACT_POINTS=jdbc:mysql://mysql_container_forLedger:3306/
      - SCALAR_DB_STORAGE=jdbc
      - SCALAR_DB_CONTACT_PORT=3307
      - SCALAR_DB_USERNAME=root
      - SCALAR_DB_PASSWORD=root
      - SCALAR_DL_LEDGER_PROOF_ENABLED=true
      - SCALAR_DL_LEDGER_PROOF_PRIVATE_KEY_PATH=/scalar/ledger-key.pem
      - SCALAR_DL_LEDGER_AUDITOR_ENABLED=true
    networks:
      - scalar-network-mysql
    # Overriding the CMD instruction in the scalar-ledger Dockerfile to add the -wait option.
    command: |
      dockerize -template log4j2.properties.tmpl:log4j2.properties
      ./bin/scalar-ledger --config ledger.properties
    restart: on-failure
    
  ledger-envoy:
    image: ghcr.io/scalar-labs/scalar-envoy:1.3.0
    container_name: "scalardl-samples-ledger-envoy-3"
    ports:
      - "9901:9901"
      - "50051:50051"
      - "50052:50052"
    depends_on:
      - scalar-ledger
    environment:
      - admin_access_log_path=/dev/stdout
      - scalardl_address=scalar-ledger
      - service_listeners=scalar-service:50051,scalar-privileged:50052
      - envoy_tls=false
    networks:
      - scalar-network-mysql 
    restart: on-failure:5

  scalar-auditor:
    image: ghcr.io/scalar-labs/scalar-auditor:3.6.0
    container_name: "scalardl-samples-scalar-auditor-3"
    volumes:
      - ./fixture/auditor.pem:/scalar/auditor.pem
      - ./fixture/auditor-key.pem:/scalar/auditor-key.pem
    depends_on:
      mysqls_auditor:
        condition: service_healthy
    environment:
      - SCALAR_DB_CONTACT_POINTS=jdbc:mysql://mysql_container_forAuditor:3306/
      - SCALAR_DB_STORAGE=jdbc
      - SCALAR_DB_CONTACT_PORT=3308
      - SCALAR_DB_USERNAME=root
      - SCALAR_DB_PASSWORD=root
      - SCALAR_DL_AUDITOR_LEDGER_HOST=ledger-envoy
      - SCALAR_DL_AUDITOR_CERT_PATH=/scalar/auditor.pem
      - SCALAR_DL_AUDITOR_PRIVATE_KEY_PATH=/scalar/auditor-key.pem
    networks:
      - scalar-network-mysql
    # Overriding the CMD instruction in the scalar-ledger Dockerfile to add the -wait option.
    command: |
      dockerize -template auditor.properties.tmpl:auditor.properties
      -template log4j2.properties.tmpl:log4j2.properties
      ./bin/scalar-auditor --config auditor.properties
    restart: on-failure:5

  auditor-envoy:
    image: ghcr.io/scalar-labs/scalar-envoy:1.3.0
    container_name: "scalardl-samples-auditor-envoy-3"
    ports:
      - "9902:9901"
      - "40051:40051"
      - "40052:40052"
    depends_on:
      - scalar-auditor
    environment:
      - admin_access_log_path=/dev/stdout
      - scalardl_address=scalar-auditor
      - service_listeners=scalar-service:40051,scalar-privileged:40052
      - envoy_tls=false
    networks:
      - scalar-network-mysql
    restart: on-failure:5

  cfssl-init:
    # This service should be run separately before two services below
    # (cfssl-serve and cfssl-ocspserve) with `depends_on` option, because if
    # they start up at the same time (by commands like `docker-compose up`),
    # they both attempt to generate the same missing certificate files, which
    # results in a race condition.
    image: ghcr.io/scalar-labs/scalar-cfssl:1.0.0
    container_name: "scalardl-samples-cfssl-init-4"
    volumes:
      - ./cfssl/data:/cfssl/data
    command: /bin/true
    networks:
      - scalar-network-mysql

  cfssl-serve:
    image: ghcr.io/scalar-labs/scalar-cfssl:1.0.0
    container_name: "scalardl-samples-cfssl-serve-4"
    volumes:
      - ./cfssl/data:/cfssl/data
    depends_on:
      - cfssl-init
    command: serve
    ports:
      - "8888:8888"
    networks:
      - scalar-network-mysql

  cfssl-ocspserve:
    image: ghcr.io/scalar-labs/scalar-cfssl:1.0.0
    container_name: "scalardl-samples-cfssl-ocspserve-4"
    volumes:
      - ./cfssl/data:/cfssl/data
    depends_on:
      - cfssl-init
    command: ocspserve
    ports:
      - "8889:8889"
    networks:
      - scalar-network-mysql    

  scalar-filemanager:
    image: kanank/scalar_filemanager_local:latest
    container_name: "scalardl-filemanager"
    ports:
      - "8092:8092"         
    volumes:
      - ./scalar-container:/home/proj/scalar-container    
    networks:
      - scalar-network-mysql
    depends_on:
      - ledger-envoy
      - auditor-envoy
    restart: on-failure:5  
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8092/fileManagement/admin/checkHealth"]
      interval: 30s
      timeout: 10s
      retries: 30

  scalar-bfd:
    image: kanank/scalar_bfd:latest
    container_name: "scalardl-bfd"
    depends_on:
      - scalar-filemanager
    ports:
      - "8093:8093"            
    networks:
      - scalar-network-mysql
    restart: on-failure:5     
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8093/fileManagement_BFD/checkHealth"]
      interval: 30s
      timeout: 10s
      retries: 25 
    
  scalar-ui:
    image: kanank/fmui-local:latest
    container_name: "fmui-local"
    ports:
      - "80:80"  
    depends_on:
      scalar-filemanager:
        condition: service_healthy
      scalar-bfd:
        condition: service_healthy

volumes:
  mysql-data-Ledger:
  mysql-data-Auditor:
  mysql-data-scalardb:

networks:
  scalar-network-mysql:
    name: scalar-network-mysql
